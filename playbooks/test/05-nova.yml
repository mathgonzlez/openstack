---
- hosts: lenstack.local.lan #Change server
  vars_files:
    - ./vars/dependencies.yml 
    - ./vars/keystone.yml  
    - ./vars/placement.yml
    - ./vars/nova.yml
  no_log: False
  tasks:
#########################NOVA INSTALLATION######################################
     - name: CREATE {{ NOVA_SERVICE_NAME }} DB
       mysql_db:
         name:
           - "{{ NOVA_SERVICE_NAME }}"
           - nova_api
           - nova_cell0
         state: present
         login_host: "{{ HOST_NAME}}" #SIN ESTO SIEMPRE ESTA EN LOCALHOST
         login_unix_socket: /var/lib/mysql/mysql.sock
     - name: CREATE USER "{{ NOVA_SERVICE_NAME }}" WITH PASS 'openstack' AND SET FULL R/W PRIVILEGES
       mysql_user:
         name: "{{ NOVA_SERVICE_NAME }}"
         password: openstack
         host: '{{ item }}'
         priv: '*.*:ALL/nova.*:ALL/*.*:ALL/nova_api.*:ALL/*.*:ALL/nova_cell0.*:ALL'  #FORMATO TABLA.*:PERMISO.. la '/' separa para varios permisos
         state: present
         login_host: "{{ HOST_NAME}}" #SRV DONDE ESTA LA DB
         update_password: on_create
         login_unix_socket: /var/lib/mysql/mysql.sock
       with_items:
         - 'localhost'
         - '%'
     - name: CREATE "{{ NOVA_SERVICE_NAME }}" USER
       os_user:
         auth:
           auth_url: http://{{ HOST_NAME}}:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         state: present
         name: "{{ NOVA_SERVICE_NAME }}"
         password: openstack
         domain: default
     - name: ADD USER {{ NOVA_SERVICE_NAME }} TO ADMIN ROLE
       os_user_role:
         auth:
           auth_url: http://{{ HOST_NAME}}:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         user: nova
         role: admin
         project: service
     - name: CREATE {{ NOVA_SERVICE_NAME }} SERVICE FOR COMPUTE
       os_keystone_service:
         auth:
           auth_url: http://{{ HOST_NAME}}:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         state: present
         name: nova
         service_type: compute
         description: OpenStack Compute
     - name: CREATE A PUBLIC SERVICE FOR {{ NOVA_SERVICE_NAME }}
       os_keystone_endpoint:
         auth:
           auth_url: http://{{ HOST_NAME}}:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         service: nova
         endpoint_interface: public
         url: http://{{ HOST_NAME }}:8774/v2.1
         region: RegionOne
         state: present
     - name: CREATE A INTERNAL SERVICE FOR {{ NOVA_SERVICE_NAME }}
       os_keystone_endpoint:
         auth:
           auth_url: http://{{ HOST_NAME}}:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         service: nova
         endpoint_interface: internal
         url: http://{{ HOST_NAME }}:8774/v2.1
         region: RegionOne
         state: present
     - name: CREATE A ADMIN SERVICE FOR {{ NOVA_SERVICE_NAME }}
       os_keystone_endpoint:
         auth:
           auth_url: http://{{ HOST_NAME}}:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         service: nova
         endpoint_interface: admin
         url: http://{{ HOST_NAME }}:8774/v2.1
         region: RegionOne
         state: present
     - name: INSTALL {{ NOVA_SERVICE_NAME }} COMPONENTS
       dnf:
         name: openstack-nova-api, openstack-nova-conductor, openstack-nova-novncproxy, openstack-nova-scheduler
         state: present
     - name: MODIFY NOVA_CONF_FILE
       shell:
         cmd: "{{ item }}"
       with_items:
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT enabled_apis osapi_compute,metadata'
         - 'crudini --set {{ NOVA_CONF_FILE }} api_database connection mysql+pymysql://{{ NOVA_SERVICE_NAME }}:openstack@{{ HOST_NAME }}/nova_api'
         - 'crudini --set {{ NOVA_CONF_FILE }} database connection mysql+pymysql://{{ NOVA_SERVICE_NAME }}:openstack@{{ HOST_NAME }}/{{ NOVA_SERVICE_NAME }}'
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT transport_url rabbit://openstack:{{ RABBIT_PASS }}@{{ HOST_NAME }}:5672/'
         - 'crudini --set {{ NOVA_CONF_FILE }} api auth_strategy keystone'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken www_authenticate_uri http://{{ HOST_NAME }}:5000/'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken auth_url http://{{ HOST_NAME }}:5000/'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken memcached_servers {{ HOST_NAME }}:11211'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken auth_type password'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken project_domain_name Default'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken user_domain_name Default'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken project_name service'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken username {{ NOVA_SERVICE_NAME }}'
         - 'crudini --set {{ NOVA_CONF_FILE }} keystone_authtoken password openstack'
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT my_ip {{ IP_ADDRESS_HOST }}'
         - 'crudini --set {{ NOVA_CONF_FILE }} vnc enabled true'
         - 'crudini --set {{ NOVA_CONF_FILE }} vnc server_listen {{ IP_ADDRESS_HOST }}'
         - 'crudini --set {{ NOVA_CONF_FILE }} vnc server_proxyclient_address {{ IP_ADDRESS_HOST }}'
         - 'crudini --set {{ NOVA_CONF_FILE }} glance api_servers http://{{ HOST_NAME }}:9292'
         - 'crudini --set {{ NOVA_CONF_FILE }} oslo_concurrency lock_path /var/lib/nova/tmp'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement region_name RegionOne'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement project_domain_name Default'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement project_name service'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement auth_type password'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement user_domain_name Default'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement auth_url http://{{ HOST_NAME }}:5000/v3'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement username placement'
         - 'crudini --set {{ NOVA_CONF_FILE }} placement password {{ PLACEMENT_PASS }}'
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT allow_resize_to_same_host True'
         - 'crudini --set {{ NOVA_CONF_FILE }} libvirt virt_type kvm'
         - 'crudini --set {{ NOVA_CONF_FILE }} libvirt cpu_mode host-passthrough'
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT use_neutron true'
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver'
         - 'crudini --set {{ NOVA_CONF_FILE }} DEFAULT compute_driver libvirt.LibvirtDriver'
     - name: crear archivo
       file:
        path: /home/populate{{ NOVA_SERVICE_NAME }}DB.sh
        state: touch
     - name: agregar linea
       lineinfile:
         path: /home/populate{{ NOVA_SERVICE_NAME }}DB.sh
         line: "{{ item }}"
         state: present
       with_items:
         - 'su -s /bin/sh -c "nova-manage api_db sync" {{ NOVA_SERVICE_NAME }}'
         - 'su -s /bin/sh -c "nova-manage cell_v2 map_cell0" {{ NOVA_SERVICE_NAME }}'
         - 'su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" {{ NOVA_SERVICE_NAME }}'
         - 'su -s /bin/sh -c "nova-manage db sync" {{ NOVA_SERVICE_NAME }}'
         - 'su -s /bin/sh -c "nova-manage cell_v2 list_cells" {{ NOVA_SERVICE_NAME }}'
         - 'echo "LISTO"'
     - name: Hacer ejecutable el SH
       shell: chmod +x populate{{ NOVA_SERVICE_NAME }}DB.sh
       args:
        chdir: /home/
     - name: Populate DB service
       shell: ./populate{{ NOVA_SERVICE_NAME }}DB.sh
       args:
        chdir: /home/
     - name: Create Nova instances directory
       ansible.builtin.file:
         path: /nova/instances
         state: directory
         owner: nova
         group: nova
     - name: RESTART & ENABLE {{ NOVA_SERVICE_NAME }} SERVICE
       systemd:
         name: "{{ item }}"
         state: restarted
         enabled: yes
       with_items:
         - 'openstack-nova-api.service'
         - 'openstack-nova-scheduler.service'
         - 'openstack-nova-conductor.service'
         - 'openstack-nova-novncproxy.service'