---
- hosts: controller #Change server
  vars:
    - CINDER_SERVICE_NAME: cinder
    - CINDER_DBPASS: openstack
    - CINDER_SERVICE_PORT: 8776
    - CINDER_CONF_FILE: /etc/cinder/cinder.conf
    - NOVA_CONF: /etc/nova/nova.conf
    - RABBIT_PASS: openstack
    - IP_ADDRESS_HOST: 192.168.50.19
  no_log: False
  tasks:
#-------------------------------------------------------------------------------
     - name: CREATE {{ CINDER_SERVICE_NAME }} DB
       mysql_db:
         name: "{{ CINDER_SERVICE_NAME }}"
         state: present
         login_host: controller #SIN ESTO SIEMPRE ESTA EN LOCALHOST
         login_unix_socket: /var/lib/mysql/mysql.sock
     - name: CREATE USER '{{ CINDER_SERVICE_NAME }}' WITH PASSWORD 'openstack' AND SET FULL R/W PERMISSIONS
       mysql_user:
         name: "{{ CINDER_SERVICE_NAME }}"
         password: openstack
         host: '{{ item }}'
         priv: '*.*:ALL/{{ CINDER_SERVICE_NAME }}.*:ALL'  #FORMATO TABLA.*:PERMISO.. la '/' separa para varios permisos
         state: present
         login_host: controller #SRV DONDE ESTA LA DB
         update_password: on_create
         login_unix_socket: /var/lib/mysql/mysql.sock
       with_items:
         - 'localhost'
         - '%'
     - name: CREATE {{ CINDER_SERVICE_NAME }} USER
       os_user:
         auth:
           auth_url: http://controller:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         state: present
         name: "{{ CINDER_SERVICE_NAME }}"
         password: openstack
         domain: default
     - name: ADD USER '{{ CINDER_SERVICE_NAME }}' TO ADMIN ROLE
       os_user_role:
         auth:
           auth_url: http://controller:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         user: "{{ CINDER_SERVICE_NAME }}"
         role: admin
         project: service
     - name: CREATE '{{ CINDER_SERVICE_NAME }}'v2 SERVICE FOR STORAGE
       os_keystone_service:
         auth:
           auth_url: http://controller:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         state: present
         name: cinderv2
         service_type: volumev2
         description: OpenStack Block Storage
     - name: CREATE '{{ CINDER_SERVICE_NAME }}'v3 SERVICE FOR STORAGE
       os_keystone_service:
         auth:
           auth_url: http://controller:5000
           username: admin
           password: openstack
           project_name: admin
           domain_name: Default
         state: present
         name: cinderv3
         service_type: volumev3
         description: OpenStack Block Storage
     - name: CREATE ENDPOINTS FOR CINDER
       file:
        path: /home/{{ CINDER_SERVICE_NAME }}.sh
        state: touch
     - name: agregar linea
       lineinfile:
         path: /home/{{ CINDER_SERVICE_NAME }}.sh
         line: "{{ item }}"
         state: present
       with_items:
         - 'source /home/admin-openrc.sh'
         - 'openstack endpoint create --region RegionOne volumev2 public http://controller:{{ CINDER_SERVICE_PORT }}/v2/%\(project_id\)s'
         - 'openstack endpoint create --region RegionOne volumev2 internal http://controller:{{ CINDER_SERVICE_PORT }}/v2/%\(project_id\)s'
         - 'openstack endpoint create --region RegionOne volumev2 admin http://controller:{{ CINDER_SERVICE_PORT }}/v2/%\(project_id\)s'
         - 'openstack endpoint create --region RegionOne volumev3 public http://controller:{{ CINDER_SERVICE_PORT }}/v3/%\(project_id\)s'
         - 'openstack endpoint create --region RegionOne volumev3 internal http://controller:{{ CINDER_SERVICE_PORT }}/v3/%\(project_id\)s'
         - 'openstack endpoint create --region RegionOne volumev3 admin http://controller:{{ CINDER_SERVICE_PORT }}/v3/%\(project_id\)s'
     - name: Hacer ejecutable el SH
       shell: chmod +x {{ CINDER_SERVICE_NAME }}.sh
       args:
        chdir: /home/
     - name: Run API endpoints creation
       shell: ./{{ CINDER_SERVICE_NAME }}.sh
       args:
        chdir: /home/
     - name: install '{{ CINDER_SERVICE_NAME }}'
       yum:
         name: openstack-cinder
         state: present
     - name: MODIFY CINDER CONF
       shell:
         cmd: "{{ item }}"
       with_items:
         - 'crudini --set {{ CINDER_CONF_FILE }} database connection mysql+pymysql://cinder:{{ CINDER_DBPASS }}@controller/cinder'
         - 'crudini --set {{ CINDER_CONF_FILE }} DEFAULT transport_url rabbit://openstack:{{ RABBIT_PASS }}@controller'
         - 'crudini --set {{ CINDER_CONF_FILE }} DEFAULT auth_strategy keystone'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken www_authenticate_uri http://controller:5000'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken auth_url http://controller:5000'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken memcached_servers controller:11211'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken auth_type password'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken project_domain_name default'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken user_domain_name default'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken project_name service'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken username {{ CINDER_SERVICE_NAME }}'
         - 'crudini --set {{ CINDER_CONF_FILE }} keystone_authtoken password openstack'
         - 'crudini --set {{ CINDER_CONF_FILE }} DEFAULT my_ip {{ IP_ADDRESS_HOST }}'
         - 'crudini --set {{ CINDER_CONF_FILE }} oslo_concurrency lock_path /var/lib/cinder/tmp'
     - name: POPULATE DB FOR CINDER SERVICE
       file:
        path: /home/populate{{ CINDER_SERVICE_NAME }}DB.sh
        state: touch
     - name: agregar linea
       lineinfile:
         path: /home/populate{{ CINDER_SERVICE_NAME }}DB.sh
         line: "{{ item }}"
         state: present
       with_items:
         - 'su -s /bin/sh -c "cinder-manage db sync" {{ CINDER_SERVICE_NAME }}'
         - 'echo "LISTO"'
     - name: Hacer ejecutable el SH
       shell: chmod +x populate{{ CINDER_SERVICE_NAME }}DB.sh
       args:
        chdir: /home/
     - name: Populate DB service
       shell: ./populate{{ CINDER_SERVICE_NAME }}DB.sh
       args:
        chdir: /home/
     - name: ADD TO NOVA CONF
       shell:
         cmd: "{{ item }}"
       with_items:
         - 'crudini --set {{ NOVA_CONF }} cinder os_region_name RegionOne'
     - name: RESTART NOVA API SERVICE
       systemd:
         name: "{{ item }}"
         state: restarted
         enabled: yes
       with_items:
         - 'openstack-nova-api.service'
     - name: START AND ENABLE CINDER API & SCHEDULER
       systemd:
         name: "{{ item }}"
         state: started
         enabled: yes
       with_items:
         - openstack-cinder-api.service
         - openstack-cinder-scheduler.service